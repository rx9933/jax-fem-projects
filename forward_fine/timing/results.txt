time3.py output: 
run time in seconds: [41.52542 36.81888 36.62083 36.62345 36.24933 36.76    36.91872 36.13986 36.38975 36.1425  35.73139 36.33    36.77315 36.47842 36.07951 36.38506 36.39218 36.20468 35.9566  36.07916]
avg t: 36.37228825217799s
std: 0.31229601915846344s
Note that the first iteration was not considered in averaging (since first round start jit).
Course mesh:
[15.53026 11.50585  9.80162 10.94433 11.27925 10.49673 10.34152 11.09337 10.9098  10.23273 10.7837  10.02395 10.42579 10.83267  9.97289 10.51957 10.46357 10.56679 10.15577 10.46666 10.79931]
avg t 10.580794024467469 std 0.4305031013770961





## Timing on GPU
194,928 Elements
36,829 Nodes
2 +hrs to run (7620 s) (even after first iteration jit)
[8530.19893 7983.1386  8158.56125 7927.11507 7518.73552 8049.49096]
avg t 7927.40828075409 std 218.38280831709218

STEP 0.9000000000000001
LF = 0.9000000000000001
[07-23 16:37:22][DEBUG] jax_fem: Computing shape function values, gradients, etc.
[07-23 16:37:22][DEBUG] jax_fem: ele_type = TET4, quad_points.shape = (num_quads, dim) = (1, 3)
[07-23 16:37:22][DEBUG] jax_fem: face_quad_points.shape = (num_faces, num_face_quads, dim) = (4, 1, 3)
JDS (194928, 1, 1, 3, 3) 


[07-23 16:37:23][DEBUG] jax_fem: Done pre-computations, took 0.887901782989502 [s]
[07-23 16:37:23][INFO] jax_fem: Solving a problem with 194928 cells, 36829x3 = 110487 dofs.
[07-23 16:37:23][DEBUG] jax_fem: Calling the row elimination solver for imposing Dirichlet B.C.
[07-23 16:37:23][DEBUG] jax_fem: Start timing
[07-23 16:37:23][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:37:25][DEBUG] jax_fem: Function split_and_compute_cell took 2.3163 seconds
[07-23 16:37:26][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:37:26][DEBUG] jax_fem: Before, res l_2 = 12.012950757962203
[07-23 16:37:26][DEBUG] jax_fem: Solving linear system with lift solver...
[07-23 16:37:26][DEBUG] jax_fem: PETSc - Solving with ksp_type = bcgsl, pc = gamg
[07-23 16:37:39][DEBUG] jax_fem: PETSc linear solve res = 600842.4991600912
[07-23 16:37:39][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:37:41][DEBUG] jax_fem: Function split_and_compute_cell took 1.4874 seconds
[07-23 16:37:41][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:37:42][DEBUG] jax_fem: res l_2 = 44520782.01676084
[07-23 16:37:42][DEBUG] jax_fem: Solving linear system with lift solver...
[07-23 16:37:42][DEBUG] jax_fem: PETSc - Solving with ksp_type = bcgsl, pc = gamg
[07-23 16:44:46][DEBUG] jax_fem: PETSc linear solve res = 9586.914937037114
[07-23 16:44:46][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:44:47][DEBUG] jax_fem: Function split_and_compute_cell took 1.4218 seconds
[07-23 16:44:47][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:44:48][DEBUG] jax_fem: res l_2 = 1116004.8999561607
[07-23 16:44:48][DEBUG] jax_fem: Solving linear system with lift solver...
[07-23 16:44:48][DEBUG] jax_fem: PETSc - Solving with ksp_type = bcgsl, pc = gamg
[07-23 16:46:44][DEBUG] jax_fem: PETSc linear solve res = 38.03261483394645
[07-23 16:46:44][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:46:46][DEBUG] jax_fem: Function split_and_compute_cell took 1.4849 seconds
[07-23 16:46:46][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:46:47][DEBUG] jax_fem: res l_2 = 942.7040283157926
[07-23 16:46:47][DEBUG] jax_fem: Solving linear system with lift solver...
[07-23 16:46:47][DEBUG] jax_fem: PETSc - Solving with ksp_type = bcgsl, pc = gamg
[07-23 16:48:59][DEBUG] jax_fem: PETSc linear solve res = 0.02411085231684479
[07-23 16:48:59][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:49:01][DEBUG] jax_fem: Function split_and_compute_cell took 1.4511 seconds
[07-23 16:49:01][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:49:02][DEBUG] jax_fem: res l_2 = 0.024298570237831565
[07-23 16:49:02][DEBUG] jax_fem: Solving linear system with lift solver...
[07-23 16:49:02][DEBUG] jax_fem: PETSc - Solving with ksp_type = bcgsl, pc = gamg
[07-23 16:50:57][DEBUG] jax_fem: PETSc linear solve res = 1.6279319136010806e-06
[07-23 16:50:57][DEBUG] jax_fem: Computing cell Jacobian and cell residual...
[07-23 16:50:58][DEBUG] jax_fem: Function split_and_compute_cell took 1.4826 seconds
[07-23 16:50:58][DEBUG] jax_fem: Creating sparse matrix with scipy...
[07-23 16:50:59][DEBUG] jax_fem: res l_2 = 0.0026995860859274565
[07-23 16:50:59][INFO] jax_fem: Solve took 816.1045081615448 [s]
[07-23 16:50:59][DEBUG] jax_fem: max of dofs = 2.5776790036667103
[07-23 16:50:59][DEBUG] jax_fem: min of dofs = -2.784553869555903
[07-23 16:50:59][INFO] jax_fem: STEP 0.9500000000000001


TIME [285.34548 290.29804 273.43817 281.77292 289.57687 280.56263]
avg t 283.1297266960144 std 6.2499190633164

minimize output:
At iterate  699    f=  1.42133D-03    |proj g|=  4.27761D-04
ALPHA SHAPE (19634, 1)
STEP 0.5
STEP 1.0
TIK (19634,)
djda Norm 0.013870588289048982

At iterate  700    f=  1.41584D-03    |proj g|=  1.08649D-03

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
19634    700    724   4838     0     3   1.086D-03   1.416D-03
  F =   1.4158393489999963E-003

STOP: TOTAL NO. of ITERATIONS REACHED LIMIT                 
STEP 0.5
STEP 1.0
TIME: 4392.590349435806
##########################
Data:
speed2.py; 7_20 coarse mesh
TIME [6.50027 2.9455  3.13243 3.09584 3.15734 2.96112 3.13066 3.11466 3.22497 2.95725 3.05092 3.02948 3.07037 2.99791 3.03773 3.07317 3.00723 2.92434 3.02448 3.05603]
avg t 3.0521819215071826 std 0.07663858901757797
